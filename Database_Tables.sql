create database PursePro
USE PursePro;

CREATE TABLE User (
    UserID INT AUTO_INCREMENT PRIMARY KEY,
    UserName VARCHAR(50) NOT NULL,
    Email VARCHAR(100) NOT NULL UNIQUE,
    Password VARCHAR(255) NOT NULL,
    Phone CHAR(11) not null Unique,
    DateCreated TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    IsActive BOOLEAN DEFAULT TRUE,
    TypeOfAccount ENUM('Induvidual', 'Organization') DEFAULT 'Induvidual',
    AccountBalance DECIMAL(15, 2) DEFAULT 0.00
);
select *  from User;

CREATE TABLE Transactions (
    TransactionID INT AUTO_INCREMENT PRIMARY KEY,
    Amount DECIMAL(10, 2) NOT NULL,
    Category VARCHAR(50) NOT NULL,
    Date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    Description TEXT,
    UserID INT NOT NULL,
    RecipientID INT NOT NULL,
    FOREIGN KEY (UserID) REFERENCES User(UserID) ON DELETE CASCADE ON UPDATE CASCADE,
    FOREIGN KEY (RecipientID) REFERENCES User(UserID) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE Budget (
    BudgetID INT AUTO_INCREMENT PRIMARY KEY,
    UserID INT NOT NULL,
    Amount DECIMAL(10, 2) DEFAULT 0.00,
    Category Varchar(100),
    DateCreated TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (UserID) REFERENCES User(UserID) ON DELETE CASCADE ON UPDATE CASCADE
);



CREATE TABLE FinancialHealthScore (
    ScoreID INT AUTO_INCREMENT PRIMARY KEY,
    UserID INT NOT NULL,
    IncomeToExpenseRatio DECIMAL(10, 2) NOT NULL,
    SavingsPotentialPercentage DECIMAL(5, 2) NOT NULL,
    Date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    Remarks ENUM('Healthy', 'Unhealthy') NOT NULL,
    FOREIGN KEY (UserID) REFERENCES User(UserID) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE VIRTUAL_CARDS (
    CardID INT AUTO_INCREMENT PRIMARY KEY,
    UserID INT NOT NULL,
    CardNumber VARCHAR(16) NOT NULL UNIQUE,
    ExpirationDate DATE NOT NULL,
    CVV VARCHAR(4) NOT NULL,
    CardLimit DECIMAL(10, 2) NOT NULL,
    CardStatus VARCHAR(50) NOT NULL,
    IssuedDate DATETIME DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (UserID) REFERENCES User(UserID) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE CurrencyConversionRate (
    ConversionID INT AUTO_INCREMENT PRIMARY KEY,
    CurrencyCode CHAR(3) NOT NULL UNIQUE, -- ISO 4217 Currency Codes (e.g., USD, EUR, INR)
    CurrencyName VARCHAR(50) NOT NULL, -- Full name of the currency
    RateToUSD DECIMAL(10, 6) NOT NULL, -- Conversion rate to USD
    LastUpdated DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

CREATE TABLE PaymentRequest (
    RequestID INT AUTO_INCREMENT PRIMARY KEY,
    SenderID INT NOT NULL,
    RecipientID INT NOT NULL,
    Amount DECIMAL(10, 2) NOT NULL,
    Status ENUM('Pending', 'Completed', 'Declined', 'Cancelled') NOT NULL DEFAULT 'Pending',
    DateCreated DATETIME DEFAULT CURRENT_TIMESTAMP,
    DateUpdated DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (SenderID) REFERENCES User(UserID) ON DELETE CASCADE ON UPDATE CASCADE,
    FOREIGN KEY (RecipientID) REFERENCES User(UserID) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE Subscriptions (
    SubscriptionID INT AUTO_INCREMENT PRIMARY KEY,
    SubscriptionName VARCHAR(100) NOT NULL,
    Description VARCHAR(255),
    Price DECIMAL(10, 2) NOT NULL,
    DurationInDays INT NOT NULL
);

CREATE table Incomes(
    IncomeID INT AUTO_INCREMENT PRIMARY KEY,
	Source varchar(100),
    amount decimal(10,2),
    dateTime DATETIME DEFAULT CURRENT_TIMESTAMP,
    UserID INT,
    FOREIGN KEY (UserID) REFERENCES User(UserID) ON DELETE CASCADE ON UPDATE CASCADE
);
select * from Incomes;

CREATE TABLE Expense (
    ExpenseID INT AUTO_INCREMENT PRIMARY KEY,
    Amount DECIMAL(10, 2) NOT NULL,
    Category VARCHAR(50) NOT NULL,
    Date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    UserID INT NOT NULL,
    FOREIGN KEY (UserID) REFERENCES User(UserID) ON DELETE CASCADE ON UPDATE CASCADE
);